name: Build APK and Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3'
          channel: 'stable'

      - name: Set up keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=upload-keystore.jks" >> android/key.properties

      - name: Get dependencies
        run: flutter pub get

      - name: Configure Gradle
        run: |
          cd android
          chmod +x gradlew
          ./gradlew wrapper

      - name: Build APK
        run: |
          flutter build apk --release
          cd build/app/outputs/flutter-apk/
          mv app-release.apk silage-tracker-release.apk

      - name: Get latest release version
        id: get_version
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name || echo "0.0.0")
          if [ "$LATEST_RELEASE" = "null" ]; then
            LATEST_RELEASE="0.0.0"
          fi
          echo "Current version: $LATEST_RELEASE"
          # Split version into parts
          IFS='.' read -r major minor patch <<< "$LATEST_RELEASE"
          # Increment patch version
          new_patch=$((patch + 1))
          NEW_VERSION="$major.$minor.$new_patch"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version will be: $NEW_VERSION"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          files: build/app/outputs/flutter-apk/silage-tracker-release.apk
          body: |
            Release ${{ env.NEW_VERSION }}
            
            Changes in this version:
            - Manual release triggered
            - APK build included
